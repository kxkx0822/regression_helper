// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// addColumnOfOnes
NumericMatrix addColumnOfOnes(NumericMatrix mat);
RcppExport SEXP _regressionhelper_addColumnOfOnes(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(addColumnOfOnes(mat));
    return rcpp_result_gen;
END_RCPP
}
// getBetaHat
NumericVector getBetaHat(NumericMatrix mat, NumericVector y);
RcppExport SEXP _regressionhelper_getBetaHat(SEXP matSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(getBetaHat(mat, y));
    return rcpp_result_gen;
END_RCPP
}
// getF
List getF(NumericMatrix mat, NumericVector y);
RcppExport SEXP _regressionhelper_getF(SEXP matSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(getF(mat, y));
    return rcpp_result_gen;
END_RCPP
}
// getResidual
NumericVector getResidual(NumericMatrix mat, NumericVector y);
RcppExport SEXP _regressionhelper_getResidual(SEXP matSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(getResidual(mat, y));
    return rcpp_result_gen;
END_RCPP
}
// getRsquare
double getRsquare(NumericMatrix mat, NumericVector y);
RcppExport SEXP _regressionhelper_getRsquare(SEXP matSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(getRsquare(mat, y));
    return rcpp_result_gen;
END_RCPP
}
// getT
List getT(NumericMatrix mat, NumericVector y);
RcppExport SEXP _regressionhelper_getT(SEXP matSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(getT(mat, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_regressionhelper_addColumnOfOnes", (DL_FUNC) &_regressionhelper_addColumnOfOnes, 1},
    {"_regressionhelper_getBetaHat", (DL_FUNC) &_regressionhelper_getBetaHat, 2},
    {"_regressionhelper_getF", (DL_FUNC) &_regressionhelper_getF, 2},
    {"_regressionhelper_getResidual", (DL_FUNC) &_regressionhelper_getResidual, 2},
    {"_regressionhelper_getRsquare", (DL_FUNC) &_regressionhelper_getRsquare, 2},
    {"_regressionhelper_getT", (DL_FUNC) &_regressionhelper_getT, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_regressionhelper(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
